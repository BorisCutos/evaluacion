/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package evaluation;

import charge.values.ChargeGalaxianTherms;
import charge.values.ChargeUndefinedGalaxianTherms;
import galaxiantoearth.ProcessGalaxianNumber;
import galaxiantoearth.ValidateGalaxianNumber;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import transfor.arabic.RomanNumbers;

/**
 *
 * @author Boris
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        evaluationRomanArabicTabbedPane = new javax.swing.JTabbedPane();
        evaluationPanel = new javax.swing.JPanel();
        evaluationPrincipalMessage = new javax.swing.JLabel();
        evaluationTirthOption = new javax.swing.JLabel();
        evaluationFistOption = new javax.swing.JLabel();
        evaluationFourOption = new javax.swing.JLabel();
        evaluationSecondOption = new javax.swing.JLabel();
        evaluationFiveOption = new javax.swing.JLabel();
        evaluationInput = new javax.swing.JTextField();
        evaluateResult = new javax.swing.JTextField();
        outputEvaluationText = new javax.swing.JLabel();
        calculateGalacticaNumbers = new javax.swing.JButton();
        romanNumberRestriction = new javax.swing.JPanel();
        romanPanelPrincipalMessage = new javax.swing.JLabel();
        romanPanelSevenRestriction = new javax.swing.JLabel();
        romanPanelSixsRestriction = new javax.swing.JLabel();
        romanPanelFirstOption = new javax.swing.JLabel();
        romanPanelTirhtRestriction = new javax.swing.JLabel();
        romanPanelSecondRestriction = new javax.swing.JLabel();
        romanPanelFourRestriction = new javax.swing.JLabel();
        romanPanelFiveRestriction = new javax.swing.JLabel();
        inputRomanText = new javax.swing.JLabel();
        romanInput = new javax.swing.JTextField();
        outputRomanText = new javax.swing.JLabel();
        romanResult = new javax.swing.JTextField();
        calculateRomanGalactic = new javax.swing.JButton();
        arabicPane = new javax.swing.JPanel();
        inputArabicText = new javax.swing.JLabel();
        arabicInput = new javax.swing.JTextField();
        arabicResult = new javax.swing.JTextField();
        outputArabicText = new javax.swing.JLabel();
        calculateArabicRoman = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        evaluationPrincipalMessage.setText("Write the following options in the box.. one by one, for evaluation");

        evaluationTirthOption.setText("3.  glob prok Gold");

        evaluationFistOption.setText("1.  pish tegj glob glob ");

        evaluationFourOption.setText("4.  glob prok Iron");

        evaluationSecondOption.setText("2.  glob prok Silver");

        evaluationFiveOption.setText("5. how much wood could a woodchuck chuck if a woodchuck could chuck wood");

        evaluationInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluationInputActionPerformed(evt);
            }
        });

        evaluateResult.setEditable(false);

        outputEvaluationText.setText("RESULT");

        calculateGalacticaNumbers.setText("Evaluate");
        calculateGalacticaNumbers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateGalacticaNumbersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout evaluationPanelLayout = new javax.swing.GroupLayout(evaluationPanel);
        evaluationPanel.setLayout(evaluationPanelLayout);
        evaluationPanelLayout.setHorizontalGroup(
            evaluationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evaluationPanelLayout.createSequentialGroup()
                .addGroup(evaluationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(evaluationPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(evaluationPrincipalMessage))
                    .addGroup(evaluationPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(evaluationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(evaluationTirthOption)
                            .addComponent(evaluationFourOption)
                            .addComponent(evaluationFistOption)
                            .addComponent(evaluationSecondOption)
                            .addComponent(evaluationFiveOption)
                            .addGroup(evaluationPanelLayout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(outputEvaluationText))
                            .addGroup(evaluationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(evaluateResult, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, evaluationPanelLayout.createSequentialGroup()
                                    .addGap(26, 26, 26)
                                    .addGroup(evaluationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(calculateGalacticaNumbers)
                                        .addComponent(evaluationInput, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        evaluationPanelLayout.setVerticalGroup(
            evaluationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(evaluationPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(evaluationPrincipalMessage)
                .addGap(19, 19, 19)
                .addComponent(evaluationFistOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evaluationSecondOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evaluationTirthOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evaluationFourOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evaluationFiveOption)
                .addGap(28, 28, 28)
                .addComponent(evaluationInput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(evaluationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evaluateResult, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputEvaluationText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(calculateGalacticaNumbers)
                .addGap(51, 51, 51))
        );

        evaluationRomanArabicTabbedPane.addTab("EVALUATION", evaluationPanel);

        romanPanelPrincipalMessage.setText("RESTRICTIONS");

        romanPanelSevenRestriction.setText(" \"V\", \"L\", and \"D\" can never be subtracted");

        romanPanelSixsRestriction.setText(" \"C\" can be subtracted from \"D\" and \"M\" only");

        romanPanelFirstOption.setText("\"I\", \"X\", \"C\", and \"M\" can be repeated three times in succession");

        romanPanelTirhtRestriction.setText("\"D\", \"L\", and \"V\" can never be repeated");

        romanPanelSecondRestriction.setText("\"I\", \"X\", \"C\", and \"M\"They may appear four times if the third and fourth are separated by a smaller value ");

        romanPanelFourRestriction.setText("\"I\" can be subtracted from \"V\" and \"X\" only");

        romanPanelFiveRestriction.setText(" \"X\" can be subtracted from \"L\" and \"C\" only");

        inputRomanText.setText("Enter your Roman Number");

        outputRomanText.setText("Result");

        romanResult.setEditable(false);

        calculateRomanGalactic.setText("Calculate");
        calculateRomanGalactic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateRomanGalacticActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout romanNumberRestrictionLayout = new javax.swing.GroupLayout(romanNumberRestriction);
        romanNumberRestriction.setLayout(romanNumberRestrictionLayout);
        romanNumberRestrictionLayout.setHorizontalGroup(
            romanNumberRestrictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(romanNumberRestrictionLayout.createSequentialGroup()
                .addGroup(romanNumberRestrictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(romanNumberRestrictionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(romanPanelPrincipalMessage))
                    .addGroup(romanNumberRestrictionLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(romanNumberRestrictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(romanPanelFourRestriction)
                            .addComponent(romanPanelFiveRestriction)
                            .addComponent(romanPanelTirhtRestriction)
                            .addComponent(romanPanelSecondRestriction)
                            .addComponent(romanPanelSixsRestriction)
                            .addComponent(romanPanelFirstOption)
                            .addComponent(romanPanelSevenRestriction)))
                    .addGroup(romanNumberRestrictionLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(romanNumberRestrictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(outputRomanText)
                            .addComponent(inputRomanText))
                        .addGap(51, 51, 51)
                        .addGroup(romanNumberRestrictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(romanInput, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(romanResult, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(romanNumberRestrictionLayout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(calculateRomanGalactic)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        romanNumberRestrictionLayout.setVerticalGroup(
            romanNumberRestrictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(romanNumberRestrictionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(romanPanelPrincipalMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(romanPanelFirstOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(romanPanelSecondRestriction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(romanPanelTirhtRestriction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(romanPanelFourRestriction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(romanPanelFiveRestriction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(romanPanelSixsRestriction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(romanPanelSevenRestriction)
                .addGap(25, 25, 25)
                .addGroup(romanNumberRestrictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputRomanText)
                    .addComponent(romanInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(romanNumberRestrictionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputRomanText)
                    .addComponent(romanResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(calculateRomanGalactic)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        evaluationRomanArabicTabbedPane.addTab("ROMAN NUMBERS", romanNumberRestriction);

        inputArabicText.setText("Enter an Arabic Number");

        arabicInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arabicInputActionPerformed(evt);
            }
        });

        arabicResult.setEditable(false);

        outputArabicText.setText("Result");

        calculateArabicRoman.setText("Calculate");
        calculateArabicRoman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateArabicRomanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout arabicPaneLayout = new javax.swing.GroupLayout(arabicPane);
        arabicPane.setLayout(arabicPaneLayout);
        arabicPaneLayout.setHorizontalGroup(
            arabicPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arabicPaneLayout.createSequentialGroup()
                .addGroup(arabicPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(arabicPaneLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(arabicPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(outputArabicText, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputArabicText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(arabicPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arabicInput, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(arabicResult, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(arabicPaneLayout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(calculateArabicRoman)))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        arabicPaneLayout.setVerticalGroup(
            arabicPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arabicPaneLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(arabicPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputArabicText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arabicInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(arabicPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arabicResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputArabicText))
                .addGap(65, 65, 65)
                .addComponent(calculateArabicRoman)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        evaluationRomanArabicTabbedPane.addTab("ARABIC - ROMAN", arabicPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(evaluationRomanArabicTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(evaluationRomanArabicTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void evaluationInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluationInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_evaluationInputActionPerformed

    private void calculateGalacticaNumbersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateGalacticaNumbersActionPerformed
        // TODO add your handling code here:

        String galaxyValue = this.evaluationInput.getText();
        String galaxyValueToProcess = "";
        double undefinedThermsValues = 0;
        boolean stringValidator = false;
        
        /*Se llaman instancian a las clases pertinentes*/
        ChargeGalaxianTherms chargeGalaxianTherms = new ChargeGalaxianTherms();
        ChargeUndefinedGalaxianTherms chargeUndefinedGalaxianTherms = new ChargeUndefinedGalaxianTherms();
        Map<String, String> mapGalaxianTherms = new TreeMap<String, String>();
        Map<String, Double> mapUndefinedTherms = new TreeMap<String, Double>();

        
        /*Se transforma a mayusculas los caracteres ingresados*/
        galaxyValue = galaxyValue.toUpperCase();
        System.out.println(galaxyValue.toUpperCase());

        String[] datos = galaxyValue.split(" ");
        mapGalaxianTherms = chargeGalaxianTherms.getMap();
        mapUndefinedTherms = chargeUndefinedGalaxianTherms.getMap();
        
        /*Se procesa el String caracter a caracter*/
        for (String item : datos) {
            if (mapGalaxianTherms.containsKey(item)) {
                galaxyValueToProcess += mapGalaxianTherms.get(item);
                stringValidator = true;
            } else {
                if (mapUndefinedTherms.containsKey(item)) {
                    undefinedThermsValues += mapUndefinedTherms.get(item);
                    stringValidator = true;
                } else {
                    evaluateResult.setText("I have no idea what you are talking about");
                    stringValidator = false;
                    break;
                }
            }
        }
        /*Espacio para mostrar los resultados del ejercicio 1*/
        if (stringValidator) {
            ValidateGalaxianNumber validateGalaxianNumber = new ValidateGalaxianNumber(galaxyValueToProcess);
            if (validateGalaxianNumber.isGalaxianNumber()) {
                if (undefinedThermsValues == 0) {
                    undefinedThermsValues = 1;
                }
                ProcessGalaxianNumber processGalaxianNumber = new ProcessGalaxianNumber(galaxyValueToProcess);
                evaluateResult.setText(Double.toString( undefinedThermsValues * processGalaxianNumber.calculateEarthNotation()));
            }

        }
    }//GEN-LAST:event_calculateGalacticaNumbersActionPerformed

    private void calculateRomanGalacticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateRomanGalacticActionPerformed
        
        String romanGalaxyValue = this.romanInput.getText();
        romanGalaxyValue = romanGalaxyValue.toUpperCase();
        
        /*instancia a la clase que nos permit saber si lo ingresado pertenece a un numero glactico conocido*/
        ValidateGalaxianNumber validateGalaxianNumber = new ValidateGalaxianNumber(romanGalaxyValue);
        if (validateGalaxianNumber.isGalaxianNumber()) {
            ProcessGalaxianNumber processGalaxianNumber = new ProcessGalaxianNumber(romanGalaxyValue);
            romanResult.setText(Double.toString(processGalaxianNumber.calculateEarthNotation()));  //Imprime los resultados
        } else {
            JOptionPane.showMessageDialog(null, "ERROR", "error", HEIGHT);
        }
    }//GEN-LAST:event_calculateRomanGalacticActionPerformed

    private void arabicInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arabicInputActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_arabicInputActionPerformed

    private void calculateArabicRomanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateArabicRomanActionPerformed
        // TODO add your handling code here:
        int arabicNumber = 0;
        boolean validatorInmput = false;
        try {
            arabicNumber = Integer.parseInt(arabicInput.getText()); //Permite verificar que lo ingresado sea solo numeros
            validatorInmput = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese Solo Numeros", "error", HEIGHT);
            validatorInmput = false;
        }
        if (validatorInmput) {
            RomanNumbers romanNumbers = new RomanNumbers();
            arabicResult.setText((String)romanNumbers.convertToRomanNumber(arabicNumber)); //Muestra el resultado
        }
    }//GEN-LAST:event_calculateArabicRomanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arabicInput;
    private javax.swing.JPanel arabicPane;
    private javax.swing.JTextField arabicResult;
    private javax.swing.JButton calculateArabicRoman;
    private javax.swing.JButton calculateGalacticaNumbers;
    private javax.swing.JButton calculateRomanGalactic;
    private javax.swing.JTextField evaluateResult;
    private javax.swing.JLabel evaluationFistOption;
    private javax.swing.JLabel evaluationFiveOption;
    private javax.swing.JLabel evaluationFourOption;
    private javax.swing.JTextField evaluationInput;
    private javax.swing.JPanel evaluationPanel;
    private javax.swing.JLabel evaluationPrincipalMessage;
    private javax.swing.JTabbedPane evaluationRomanArabicTabbedPane;
    private javax.swing.JLabel evaluationSecondOption;
    private javax.swing.JLabel evaluationTirthOption;
    private javax.swing.JLabel inputArabicText;
    private javax.swing.JLabel inputRomanText;
    private javax.swing.JLabel outputArabicText;
    private javax.swing.JLabel outputEvaluationText;
    private javax.swing.JLabel outputRomanText;
    private javax.swing.JTextField romanInput;
    private javax.swing.JPanel romanNumberRestriction;
    private javax.swing.JLabel romanPanelFirstOption;
    private javax.swing.JLabel romanPanelFiveRestriction;
    private javax.swing.JLabel romanPanelFourRestriction;
    private javax.swing.JLabel romanPanelPrincipalMessage;
    private javax.swing.JLabel romanPanelSecondRestriction;
    private javax.swing.JLabel romanPanelSevenRestriction;
    private javax.swing.JLabel romanPanelSixsRestriction;
    private javax.swing.JLabel romanPanelTirhtRestriction;
    private javax.swing.JTextField romanResult;
    // End of variables declaration//GEN-END:variables
}
